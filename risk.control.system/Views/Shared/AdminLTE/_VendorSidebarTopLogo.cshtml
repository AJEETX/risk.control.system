@using Microsoft.EntityFrameworkCore;
@using risk.control.system.Helpers;
@using risk.control.system.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject ApplicationDbContext context
@inject UserManager<ApplicationUser> UserManager
@model Vendor
@if (SignInManager.IsSignedIn(User))
{
    var roleCode = string.Empty;
    <div class="user-panel mt-3 pb-3 mb-3 d-flex">

        @if (UserManager.GetUserAsync(User).Result?.ProfilePicture != null)
        {
            <div class="image">
                <img class="elevation-2 sidebar-profile img-circle" src="data:image/*;base64,@(Convert.ToBase64String(@UserManager.GetUserAsync(User).Result.ProfilePicture))">
            </div>
        }
        else
        {
            <div class="image">
                <img class="elevation-0 sidebar-profile img-circle" src="@Applicationsettings.NO_IMAGE">
            </div>
        }
        <a  class="d-block">
            @UserManager.GetUserAsync(User).Result?.FirstName.ToLower()
            @if (User.IsInRole(AppRoles.AGENCY_ADMIN.ToString()))
            {
                roleCode = @Applicationsettings.AGENCY_ADMIN.CODE;
                <span class="badge badge-info">@roleCode</span>
            }
            else if (User.IsInRole(AppRoles.SUPERVISOR.ToString()))
            {
                roleCode = @Applicationsettings.SUPERVISOR.CODE;
                <span class="badge badge-dark">@roleCode</span>
            }
            else if (User.IsInRole(AppRoles.AGENT.ToString()))
            {
                roleCode = @Applicationsettings.AGENT.CODE;
                <span class="badge badge-dark">@roleCode</span>
            }
        </a>
    </div>
}