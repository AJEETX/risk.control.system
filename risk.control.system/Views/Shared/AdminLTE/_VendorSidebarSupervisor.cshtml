@using Microsoft.EntityFrameworkCore;
@using risk.control.system.Helpers;
@using risk.control.system.Models;
@inject SignInManager<ApplicationUser> SignInManager
@inject ApplicationDbContext context
@inject UserManager<ApplicationUser> UserManager
@model Vendor
@{
    var userEmail = User?.Identity?.Name;
    var applicationUser = context.VendorApplicationUser.Where(u => u.Email == userEmail).FirstOrDefault();
    var userMailbox = context.Mailbox
    .Include(m => m.Inbox)
    .Include(m => m.Outbox)
    .Include(m => m.Sent)
    .FirstOrDefault(c => c.Name == applicationUser.Email);

}
@{
    if (User.IsInRole(AppRoles.AgencyAdmin.ToString()))
    {
        <li class="nav-item">
            <a is-active-page class="navlink-border nav-link @Url.MakeActiveClass("Agency","") @Url.MakeActiveClass("AgentWorkload","")">
                <i class="nav-icon fas fa-shield-alt"></i>
                <p class="sidebar-menu-header-label">
                    @Applicationsettings.ADMIN_SETTINGS
                    <i class="right fas fa-angle-right"></i>
                </p>
            </a>
        </li>

        <li class="nav-item">
            <a is-active-page asp-controller="Agency" asp-action="Profile" class="actual-link nav-link @Url.MakeActiveClass("Agency","Profile") @Url.MakeActiveClass("Agency","Edit")">
                <i class="fas fa-building nav-icon"></i>
                <p>
                    Manage Agency
                </p>
            </a>
        </li>
        <li class="nav-item">
            <a is-active-page asp-controller="Agency" asp-action="Service" class="actual-link nav-link @Url.MakeActiveClass("Agency","Service")
                                                        @Url.MakeActiveClass("Agency","EditService")  @Url.MakeActiveClass("Agency","DeleteService") @Url.MakeActiveClass("Agency","ServiceDetail")">
                <i class="fas fas fa-list-ol nav-icon"></i>
                <p>
                    @Applicationsettings.MANAGE_SERVICE
                </p>
            </a>
        </li>

        <li class="nav-item">
            <a is-active-page asp-controller="Agency" asp-action="CreateService" class="actual-link nav-link @Url.MakeActiveClass("Agency","CreateService")
                                        ">
                <i class="fas fa-truck nav-icon"></i>
                <p>
                    Add Service
                </p>
            </a>
        </li>
        <li class="nav-item">
            <a is-active-page asp-controller="Agency" asp-action="User" class="actual-link nav-link @Url.MakeActiveClass("Agency","User") @Url.MakeActiveClass("Agency","EditUser")
                                            @Url.MakeActiveClass("Agency","UserRoles")">
                <i class="fas fa-user-friends nav-icon"></i>
                <p>
                    @Applicationsettings.MANAGE_USERS
                </p>
            </a>
        </li>
        <li class="nav-item">
            <a is-active-page asp-controller="Agency" asp-action="CreateUser" class="actual-link nav-link @Url.MakeActiveClass("Agency","CreateUser")
                                ">
                <i class="fas fa-user-plus nav-icon"></i>
                <p>
                    Add User
                </p>
            </a>
        </li>
        <li class="nav-item">
            <a is-active-page asp-controller="AgentWorkload" asp-action="Index" class="actual-link nav-link @Url.MakeActiveClass("AgentWorkload","Load")
                                                @Url.MakeActiveClass("AgentWorkload","Open") @Url.MakeActiveClass("AgentWorkload","Details")">
                <i class="fas fa-user-friends nav-icon"></i>
                <p>
                    <span class="badge badge-warning">AGENCY WORKLOAD</span>
                </p>
            </a>
        </li>
    }
}