@{
    ViewData["Title"] = "Index";
}

<style>
    /**
                     * Copyright 2019 Google LLC. All Rights Reserved.
                     * SPDX-License-Identifier: Apache-2.0
                     */
    :root {
        --building-color: #FF9800;
        --house-color: #0288D1;
        --shop-color: #7B1FA2;
        --warehouse-color: #558B2F;
    }

    /*
                     * Optional: Makes the sample page fill the window.
                     */
    #maps {
        height: 600px;
        margin: 0;
        padding: 0;
        display: none;
    }

    /*
                     * Always set the map height explicitly to define the size of the div element
                     * that contains the map.
                     */
    #map {
        height: 100%;
        width: 100%;
    }

    /*
                     * Property styles in unhighlighted state.
                     */
    .property {
        align-items: center;
        background-color: #FFFFFF;
        border-radius: 50%;
        color: #263238;
        display: flex;
        font-size: 14px;
        gap: 15px;
        height: 30px;
        justify-content: center;
        padding: 4px;
        position: relative;
        position: relative;
        transition: all 0.3s ease-out;
        width: 30px;
    }

        .property::after {
            border-left: 9px solid transparent;
            border-right: 9px solid transparent;
            border-top: 9px solid #FFFFFF;
            content: "";
            height: 0;
            left: 50%;
            position: absolute;
            top: 95%;
            transform: translate(-50%, 0);
            transition: all 0.3s ease-out;
            width: 0;
            z-index: 1;
        }

        .property .icon {
            align-items: center;
            display: flex;
            justify-content: center;
            color: #FFFFFF;
        }

            .property .icon svg {
                height: 20px;
                width: auto;
            }

        .property .details {
            display: none;
            flex-direction: column;
            flex: 1;
        }

        .property .address {
            color: #9E9E9E;
            font-size: 10px;
            margin-bottom: 10px;
            margin-top: 5px;
        }

        .property .features {
            align-items: flex-end;
            display: flex;
            flex-direction: row;
            gap: 10px;
        }

            .property .features > div {
                align-items: center;
                background: #F5F5F5;
                border-radius: 5px;
                border: 1px solid #ccc;
                display: flex;
                font-size: 10px;
                gap: 5px;
                padding: 5px;
            }

        /*
                     * Property styles in highlighted state.
                     */
        .property.highlight {
            background-color: #FFFFFF;
            border-radius: 8px;
            box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.2);
            height: 100px;
            padding: 8px 15px;
            width: auto;
        }

            .property.highlight::after {
                border-top: 9px solid #FFFFFF;
            }

            .property.highlight .details {
                display: flex;
            }

            .property.highlight .icon svg {
                width: 50px;
                height: 50px;
            }

        .property .bed {
            color: #FFA000;
        }

        .property .bath {
            color: #03A9F4;
        }

        .property .size {
            color: #388E3C;
        }

        /*
                     * House icon colors.
                     */
        .property.highlight:has(.fa-house) .icon {
            color: var(--house-color);
        }

        .property:not(.highlight):has(.fa-house) {
            background-color: var(--house-color);
        }

            .property:not(.highlight):has(.fa-house)::after {
                border-top: 9px solid var(--house-color);
            }

        /*
                     * Building icon colors.
                     */
        .property.highlight:has(.fa-building) .icon {
            color: var(--building-color);
        }

        .property:not(.highlight):has(.fa-building) {
            background-color: var(--building-color);
        }

            .property:not(.highlight):has(.fa-building)::after {
                border-top: 9px solid var(--building-color);
            }

        /*
                     * Warehouse icon colors.
                     */
        .property.highlight:has(.fa-warehouse) .icon {
            color: var(--warehouse-color);
        }

        .property:not(.highlight):has(.fa-warehouse) {
            background-color: var(--warehouse-color);
        }

            .property:not(.highlight):has(.fa-warehouse)::after {
                border-top: 9px solid var(--warehouse-color);
            }

        /*
                     * Shop icon colors.
                     */
        .property.highlight:has(.fa-shop) .icon {
            color: var(--shop-color);
        }

        .property:not(.highlight):has(.fa-shop) {
            background-color: var(--shop-color);
        }

            .property:not(.highlight):has(.fa-shop)::after {
                border-top: 9px solid var(--shop-color);
            }

</style>
<section class="content pt-2">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-secondary">
                    <div class="card-header">
                        <h3 class="card-title"><i class="fa fa-binoculars" aria-hidden="true"></i> Tasks</h3>
                        <h3 id="view-type" class="card-title" style="float:right;">
                            <a href="#" id="map-type" class="input-group-label"> <i class="far fa-map"></i> Map</a>
                            <a href="#" id="list-type" style="display:none;" class="input-group-label"> <i class="fas fa-server"></i> List</a>
                        </h3>
                    </div>
                    <div class="card-body">
                        <form id="checkboxes" asp-action="GetInvestigate" method="get" enctype="multipart/form-data">
                            <div class="col-md-12">
                                <table id="customerTable" class="table table-bordered table-hover dt-responsive nowrap w-100">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Id</th>
                                            <th>Policy #</th>
                                            <th>Document</th>
                                            <th>Customer</th>
                                            <th>Customer Name</th>
                                            <th>Beneficiary</th>
                                            <th>Beneficiary Name</th>
                                            <th>Claim Type</th>
                                            <th>Status</th>
                                            <th>Stage</th>
                                            <th>Created On</th>
                                            <th>
                                                Day(s) <i class="fa fa-asterisk" style="color:red;font-size:12px" title="Day since Allocated"></i>
                                            </th>
                                        </tr>
                                    </thead>
                                    

                                </table>
                                <div class="row">
                                    <div class="col-md-12">
                                        <button disabled id="allocatedcase" type="submit" class="btn btn-danger">
                                            <i class="fa fa-binoculars" aria-hidden="true"></i>
                                            @Applicationsettings.SELECT_CASE_INVESTIGATE
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div id="maps" class="col-md-12">
                            <div id="map"></div>
                            <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
                            <script src="https://use.fontawesome.com/releases/v6.2.0/js/all.js"></script>
                            <script>
                                (g => { var h, a, k, p = "API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
                                    ({ key: "AIzaSyDH8T9FvJ8n2LNwxkppRAeOq3Mx7I3qi1E", v: "beta" });</script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts    {
    <script>
        $(document).ready(function () {

            $('#view-type a').on('click', function () {
                var id = this.id;
                if (this.id == 'map-type') {
                    $('#checkboxes').css('display', 'none');
                    $('#maps').css('display', 'block');
                    $('#map-type').css('display', 'none');
                    $('#list-type').css('display', 'block');
                }
                else {
                    $('#checkboxes').css('display', 'block');
                    $('#maps').css('display', 'none');
                    $('#map-type').css('display', 'block');
                    $('#list-type').css('display', 'none');
                }
            });

            var table = $("#customerTable").DataTable({
                ajax: {
                    url: '/api/ClaimsVendor/GetNew',
                    dataSrc: ''
                },
                columnDefs: [{
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center',
                    'render': function (data, type, full, meta) {
                        return '<input type="checkbox" name="selectedcase[]" value="' + $('<div/>').text(data).html() + '">';
                    }
                }],
                order: [[1, 'asc']],
                fixedHeader: true,
                processing: true,
                paging: true,
                language: {
                    loadingRecords: '&nbsp;',
                    processing: '<i class="fas fa-sync fa-spin fa-4x fa-fw"></i><span class="sr-only">Loading...</span>'
                },
                columns: [
                    /* Name of the keys from
                    data file source */
                    {
                        "sDefaultContent": "",
                        "bSortable": false,
                        "mRender": function (data, type, row) {
                            var img = '<input name="selectedcase" class="selected-case" type="radio" id="' + row.id + '"  value="' + row.id + '"  />';
                            return img;
                        }
                    },
                    {
                        "data": "id", "name": "Id", "bVisible": false
                    },
                    { "data": "policyNum" },
                    {
                        "sDefaultContent": "",
                        "bSortable": false,
                        "mRender": function (data, type, row) {
                            var img = '<img src="' + row.document + '" src height="30" width="30" />';
                            return img;
                        }
                    },
                    {
                        "sDefaultContent": "",
                        "bSortable": false,
                        "mRender": function (data, type, row) {
                            var img = '<img src="' + row.customer + '" src height="30" width="30" />';
                            return img;
                        }
                    },
                    { "data": "name" },
                    {
                        "sDefaultContent": "",
                        "bSortable": false,
                        "mRender": function (data, type, row) {
                            var img = '<img src="' + row.beneficiaryPhoto + '" src height="30" width="30" />';
                            return img;
                        }
                    },
                    { "data": "beneficiaryName" },
                    { "data": "serviceType" },
                    { "data": "status" },
                    { "data": "location" },
                    { "data": "created" },
                    { "data": "timePending" },
                ],
                error: function (xhr, status, error) { alert('err ' + error) }
            });


            if ($("input[type='radio'].selected-case:checked").length) {
                $("#allocatedcase").prop('disabled', false);
            }
            else {
                $("#allocatedcase").prop('disabled', true);
            }

            // When user checks a radio button, Enable submit button
            $("input[type='radio'].selected-case").change(function (e) {
                if ($(this).is(":checked")) {
                    $("#allocatedcase").prop('disabled', false);
                }
                else {
                    $("#allocatedcase").prop('disabled', true);
                }
            });

            // Handle click on checkbox to set state of "Select all" control
            $('#customerTable tbody').on('change', 'input[type="radio"]', function () {
                // If checkbox is not checked
                if (this.checked) {
                    $("#allocatedcase").prop('disabled', false);
                } else {
                    $("#allocatedcase").prop('disabled', true);
                }
            });

            // Handle form submission event
            $('#checkboxes').on('submit', function (e) {
                var form = this;

                // Iterate over all checkboxes in the table
                table.$('input[type="checkbox"]').each(function () {
                    // If checkbox doesn't exist in DOM
                    if (!$.contains(document, this)) {
                        // If checkbox is checked
                        if (this.checked) {
                            // Create a hidden element
                            $(form).append(
                                $('<input>')
                                    .attr('type', 'hidden')
                                    .attr('name', this.name)
                                    .val(this.value)
                            );
                        }
                    }
                });
            });

            async function initMap() {
                // Request needed libraries.
                const { Map } = await google.maps.importLibrary("maps");
                const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");
                const { LatLng } = await google.maps.importLibrary("core");
                var response = $.ajax({
                    type: "GET",
                    url: "/api/ClaimsVendor/GetNewMap",
                    async: false
                }).responseText;
                const data = JSON.parse(response);
                const center = new LatLng(data.lat, data.lng);
                const map = new Map(document.getElementById("map"), {
                    zoom: 7,
                    center,
                    mapId: "4504f8b37365c3d0",
                });

                for (const property of data.response) {
                    const AdvancedMarkerElement = new google.maps.marker.AdvancedMarkerElement({
                        map,
                        content: buildContent(property),
                        position: property.position,
                        title: property.description,
                    });

                    AdvancedMarkerElement.addListener("click", () => {
                        toggleHighlight(AdvancedMarkerElement, property);
                    });
                }
            }

            function toggleHighlight(markerView, property) {
                if (markerView.content.classList.contains("highlight")) {
                    markerView.content.classList.remove("highlight");
                    markerView.zIndex = null;
                } else {
                    markerView.content.classList.add("highlight");
                    markerView.zIndex = 1;
                }
            }

            function buildContent(property) {
                const content = document.createElement("div");

                content.classList.add("property");
                content.innerHTML = `
                                                        <div class="icon">
                                                            <i aria-hidden="true" class="fa fa-icon fa-${property.type}" title="${property.type}"></i>
                                                            <span class="fa-sr-only">${property.type}</span>
                                                        </div>
                                                        <div class="details">
                                                            <div class="price">$ ${property.price}</div>
                                                            <div class="address">${property.address}</div>
                                                            <div class="features">
                                                            <div>
                                                                        <i aria-hidden="true" class="fas fa-rupee-sign" title="bedroom"></i>
                                                                <span class="fa-sr-only">bedroom</span>
                                                                <span>${property.bed}</span>
                                                            </div>
                                                            <div>
                                                                        <i aria-hidden="true" class="fas fa-phone-square-alt" title="bathroom"></i>
                                                                <span class="fa-sr-only">bathroom</span>
                                                                <span>${property.bath}</span>
                                                            </div>
                                                            <div>
                                                                <i aria-hidden="true" class="fa fa-ruler fa-lg size" title="size"></i>
                                                                <span class="fa-sr-only">size</span>
                                                                <span>${property.size} <sup>2</sup></span>
                                                            </div>
                                                            </div>
                                                        </div>
                                                        `;
                return content;
            }

            initMap();

        });
    </script>
}