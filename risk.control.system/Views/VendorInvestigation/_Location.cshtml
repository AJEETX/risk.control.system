@using risk.control.system.Helpers;
@model ReportTemplate
<input type="hidden" id="latitude" />
<input type="hidden" id="longitude" />
<input type="hidden" name="caseId" value="@Model.CaseId" />
@foreach (var location in Model.LocationTemplate)
{
	<input type="hidden" id="locationId" name="locationId" value="@location.Id" />
	<div class="col-12 p-4 mb-5 border rounded shadow-sm bg-light location-container">
		@Html.AntiForgeryToken()

		<h5 class="mb-4 text-primary border-bottom pb-2">
			<i class="fas fa-map-marker-alt me-2"></i> @location.LocationName
		</h5>

		<!-- Agent Table -->
		@{
			var agent = location.Agent;
			var agentId = agent.Id;
		}
		<table class="table table-bordered table-striped mb-4">
			<thead class="table-light">
				<tr>
					<th>Photo</th>
					<th>
						<i class="far fa-user text-primary" title="This Image has agent photo at the location" data-toggle="tooltip"></i>
					</th>
					<th>Photo</th>
					<th>Map</th>
					<th>Match</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>
						@if (agent.ValidationExecuted)
						{
							@location.AgentEmail
						}
						else
						{
							@agent.ReportType.GetEnumDisplayName()
						}
					</td>
					<td>
						<i class="far fa-user text-primary" title="Single person"></i> <i class="fa fa-asterisk asterik-style" title="Required"></i>
					</td>
					
					<td>
						@if (agent.ValidationExecuted)
						{
							<img id="face-img-@agent.Id"
								 src="data:image/*;base64,@(Convert.ToBase64String(agent?.IdImage))"
								 class="thumbnail profile-image doc-profile-image preview-image"
								 title="Click to view @location.AgentEmail photo" />
						}
						else
						{
							<img src="~/img/no-user.png" class="thumbnail profile-image doc-profile-image" />
						}
						
					</td>
					<td>
						@if (agent.ValidationExecuted)
						{
							<img src="@agent.IdImageLocationUrl"
								 class="thumbnail profile-image doc-profile-image map-image"
								 data-faceid="@agent.Id"
								 data-locationid="@location.Id"
								 data-caseid="@Model.CaseId"
								 data-source="agent"
								 title="Click to view map"/>
						}
						else
						{
							<img src="~/img/no-map.jpeg" class="thumbnail profile-image doc-profile-image" />
						}
					</td>
					<td>
						@if (agent.ValidationExecuted)
						{
							@if (agent.Similarity < 70)
							{
								<i class='fa fa-times i-orangered' aria-hidden='true'></i>
							}
							else
							{
								<i class='fas fa-check-circle i-green'></i>
							}
						}
						else
						{
							<i class='fa fa-times i-grey' aria-hidden='true'></i>
						}

					</td>
				</tr>
			</tbody>
		</table>
		<!-- FaceIds Table -->
		@if (location.FaceIds?.Any(f => f.Selected) == true)
		{
			<table class="table table-bordered table-striped mb-4">
				<thead class="table-light">
					<tr>
						<th>Photo</th>
						<th>
							<i class="fas fa-users text-primary"
							   title="This Image has 2 person" data-toggle="tooltip"></i>
							/
							<i class="far fa-user text-primary" title="This Image has single person" data-toggle="tooltip"></i>
						</th>
						<th>Photo</th>
						<th>Map</th>
						<th>Match</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var face in location.FaceIds.Where(f => f.Selected))
					{
						<tr>
							<td>
								@face.IdIName
							</td>
							<td>
								@if (face.Has2Face)
								{
									<i class="fas fa-users text-primary" title="2 persons"></i>
								}
								else
								{
									<i class="far fa-user text-primary" title="Single person"></i>
								}
								<i class="fa fa-asterisk asterik-style" title="Required"></i>
							</td>
							<td>
								@if (face.ValidationExecuted)
								{
									<img id="face-img-@face.Id"
										 src="data:image/*;base64,@(Convert.ToBase64String(face?.IdImage))"
										 class="thumbnail profile-image doc-profile-image preview-image"
										 title="Click to view face photo" />
								}
								else
								{
									<img src="~/img/no-user.png" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (face.ValidationExecuted)
								{
									<img src="@face.IdImageLocationUrl"
								 class="thumbnail profile-image doc-profile-image map-image"
								 data-faceid="@face.Id"
								 data-locationid="@location.Id"
								 data-caseid="@Model.CaseId"
										 data-source="agent"
								 title="Click to view map" />

								}
								else
								{
									<img src="~/img/no-map.jpeg" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (face.ValidationExecuted)
								{
									@if (face.Similarity < 70)
									{
										<i class='fa fa-times i-orangered' aria-hidden='true'></i>
									}
									else
									{
										<i class='fas fa-check-circle i-green'></i>
									}
								}
								else
								{
									<i class='fa fa-times i-grey' aria-hidden='true'></i>
								}

							</td>
							
						</tr>
					}

				</tbody>
			</table>
		}

		<!-- DocumentIds Table -->
		@if (location.DocumentIds?.Any(d => d.Selected) == true)
		{
			<table class="table table-bordered table-striped mb-4">
				<thead class="table-light">
					<tr>
						<th>Document</th>
						<th>
							<i class="fas fa-copy text-muted ms-2"
							   title="With Back page" data-toggle="tooltip"></i>
							/
							<i class="far fa-file text-muted ms-2" title="Single page" data-toggle="tooltip"></i>
						</th>
						<th>Image</th>
						<th>Map</th>
						<th>Valid</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var doc in location.DocumentIds.Where(d => d.Selected))
					{

						<tr>
							<td>@doc.IdIName</td>
							<td>
								@if (doc.HasBackImage)
								{
									<i class="fas fa-copy text-muted" title="Back page present"></i>
								}
								else
								{
									<i class="far fa-file text-muted" title="Front only"></i>
								}
								<i class="fa fa-asterisk asterik-style" title="Required"></i>
							</td>
							<td>
								@if (doc.ValidationExecuted)
								{
									<img id="doc-img-@doc.Id"
										 src="data:image/*;base64,@(Convert.ToBase64String(doc?.IdImage))"
										 class="thumbnail profile-image doc-profile-image preview-image"
										 title="Click to view document" />
								}
								else
								{
									<img id="doc-img-@doc.Id" src="~/img/no-user.png" class="thumbnail profile-image doc-profile-image" />
								}

							</td>
							<td>
								@if (doc.ValidationExecuted)
								{
									<img src="@doc.IdImageLocationUrl"
										 class="thumbnail profile-image doc-profile-image map-image"
										 data-faceid="@doc.Id"
										 data-locationid="@location.Id"
										 data-caseid="@Model.CaseId"
										 data-source="document"
										 title="Click to view map"/>
								}
								else
								{
									<img src="~/img/no-map.jpeg" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (doc.ValidationExecuted)
								{
									@if (!doc.DocumentIdImageValid.HasValue && doc.DocumentIdImageValid.Value)
									{
										<i class='fa fa-times i-orangered' aria-hidden='true'></i>
									}
									else
									{
										<i class='fas fa-check-circle i-green'></i>
									}
								}
								else
								{
									<i class='fa fa-times i-grey' aria-hidden='true'></i>
								}

							</td>
						</tr>

					}
				</tbody>
			</table>
		}


		<!-- Questions Table -->
		@if (location.Questions?.Any() == true)
		{
			<input type="hidden" name="LocationId" value="@location.Id" />
			<input type="hidden" name="caseId" value="@Model.CaseId" />

			<table class="table table-bordered table-striped">
				<thead class="table-light">
					<tr>
						<th>Question</th>
						<th>Answer</th>
					</tr>
				</thead>
				<tbody>
					@for (int i = 0; i < location.Questions.Count; i++)
					{
						var question = location.Questions[i];
						var required = question.IsRequired ? "required" : "";
						<tr>
							<td>
								@question.QuestionText
								@if (question.IsRequired)
								{
									<span class="required-asterisk" title="Required field" data-toggle="tooltip">*</span>
								}

								@* Hidden fields to pass extra data back *@
								<input type="hidden" name="Questions[@i].Id" value="@question.Id" />
								<input type="hidden" name="Questions[@i].QuestionText" value="@question.QuestionText" />
								<input type="hidden" name="Questions[@i].QuestionType" value="@question.QuestionType" />
								<input type="hidden" name="Questions[@i].Options" value="@question.Options" />
								<input type="hidden" name="Questions[@i].IsRequired" value="@(question.IsRequired.ToString().ToLower())" />
							</td>
							<td>
								@if (question.QuestionType == "text" || question.QuestionType == "date")
								{
									<span class="form-control-plaintext">@question.AnswerText</span>
								}
								else if (question.QuestionType == "radio" || question.QuestionType == "dropdown")
								{
									<span class="form-control-plaintext">@question.AnswerText</span>
								}
								else if (question.QuestionType == "checkbox")
								{
									var selectedOptions = question.AnswerText?.Split(',') ?? new string[] { };
									<ul class="list-unstyled mb-0">
										@foreach (var option in selectedOptions)
										{
											<li><i class="bi bi-check-circle-fill text-success"></i> @option</li>
										}
									</ul>
								}
								else
								{
									<span class="form-control-plaintext text-muted">N/A</span>
								}
							</td>

						</tr>
					}
				</tbody>
			</table>
		}

	</div>
}
<partial name="_ReportModal" />