@using risk.control.system.Helpers;
@model ReportTemplate
<input type="hidden" id="latitude" />
<input type="hidden" id="longitude" />
<input type="hidden" name="caseId" value="@Model.CaseId" />
@foreach (var location in Model.LocationReport)
{
	if(location.ValidationExecuted)
	{
		location.SetStatus();
		var agent = location.AgentIdReport;
		var duration = location.Updated.GetValueOrDefault().Subtract(agent.Updated.GetValueOrDefault());
		location.Address = Model.InsuranceType == InsuranceType.CLAIM ? "Beneficiary" : location.Address;
		<div class="col-12 mb-4 location-container">
			<div class="card mb-2 border @location.StatusClass @location.LocationStatus">
				<div class="card-header bg-light text-white d-flex">
					<h5 class="mb-0 flex-grow-1 @location.LocationStatus">
						<i class="fas fa-map-marker-alt me-2"></i> @location.LocationName
						@if (location.IsRequired)
						{
							<span class="required-asterisk" title="Mandatory Location">*</span>
						}
						<span class="badge badge-light">Time spent:</span><span class="badge @location.StatusClass" title="Time spent on the location">
							@(duration.Hours > 0 ? $"{duration.Hours}h " : "")@(duration.Minutes > 0 ? $"{duration.Minutes}m" : "less than a min")
						</span>
					</h5>
					<div class="card-tools">
                <span data-toggle="tooltip" title=" Time :  @location.Created.ToString("dd-MMM-yy hh:mm tt")" class="badge badge-light">
                    <i class="nav-icon fas fa-clock"></i> @location.Created.ToString("dd-MMM-yy hh:mm tt")
                </span>
            </div>
				</div>


				<div id="location-@location.Id" class="expand">

					<div class="card-body bg-light">
						@* Insert all the current content here (the agent table, face/doc/questions) *@

						@Html.AntiForgeryToken()
						<div class="expand" id="agent-@location.Id">
							<div class="table-responsive">
								<table class="table table-bordered table-hover dt-responsive nowrap w-100">
									<thead class="thead-light">
										<tr>
											<th class="col-face-photo"> 
												<i class="far fa-user text-primary" title="This Image has Verifier photo at the location" data-toggle="tooltip"></i> Agent Photo
											</th>
											<th class="col-pin-img" title="Indicative Address Info"><img class="action-image" src="~/headers/pincode.gif" /> Indicative Address Info</th>
											<th class="col-weather" title="Location info"><img class="action-image" src="~/headers/information.gif" />Location info</th>
											<th class="col-match">Match</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<!-- ID Photo -->
											<td>
												@if (agent.ValidationExecuted)
												{
													<img id="face-img-@agent.Id"
														 src="@(agent?.FilePath)"
														 class="mobile-capture-info"
														 title="@location.AgentEmail photo" />
														 <div>
															<small>
																@location.AgentEmail
																@if (agent.IsRequired)
																{
																	<span class="required-asterisk" title="Mandatory Location">*</span>
																}
															</small>
														 </div>
												}
												else
												{
													<img src="~/img/no-user.png" class="img-thumbnail img-fluid profile-image" />
												}
											</td>

											<!-- Map Image -->
											<td>
												@if (agent.ValidationExecuted && agent.LocationMapUrl != null)
												{
													<img src="@string.Format(@agent.LocationMapUrl, "500","500")"
														 class="mobile-capture-info"
														 data-faceid="@agent.Id"
														 data-locationid="@location.Id"
														 data-caseid="@Model.CaseId"
														 data-source="agent"
														 title="Captured map route"/>
														 <div>
															<div>@agent.LongLat</div>
																<small>@agent.LocationAddress</small>
														</div>
														<div class="badge badge-light">
																	Indicative Distance from  @location.Address Address @agent.Distance
																</div>
												}
												else
												{
													<img src="~/img/no-map.jpeg" class="img-thumbnail img-fluid profile-image" />
												}
											</td>

											<td>
												<small>@agent.LocationInfo</small>

											</td>

											<!-- Match status -->
											<td>
												@if (agent.ValidationExecuted)
												{
													@if (agent.ImageValid.HasValue && agent.ImageValid.Value)
													{
														<i class="fa fa-check-circle text-success" title="Matched" data-toggle="tooltip"></i>
													}
													else
													{
														<i class="fa fa-times-circle text-danger" title="Not matched" data-toggle="tooltip"></i>
													}
												}
												else
												{
													<i class="fa fa-times-circle text-muted" title="Not validated" data-toggle="tooltip"></i>
												}
												<div>
												@agent.Similarity
												</div>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
						<!-- FaceIds Table -->
						<partial name="_LocationFaceId" model="@location" />

						<!-- DocumentIds Table -->

						<partial name="_LocationDocId" model="@location" />

						<partial name="_LocationMedia" model="@location" />

						<!-- Questions Table -->
						<partial name="_LocationQuestion" model="@location" />
					</div> <!-- card-body -->
				</div> <!-- collapse -->
			</div> <!-- card -->
		</div> <!-- col-12 -->
	}
	
}
<partial name="_ReportModal" />