@using risk.control.system.Helpers;
@model LocationReport
@{
	var location = Model;
}

@if (location.Questions?.Any() == true)
{
<form asp-controller="Uploads" asp-action="SubmitLocationAnswers" method="post">
		@Html.AntiForgeryToken()
		<input type="hidden" name="LocationId" value="@location.Id" />
		<input type="hidden" name="LocationName" value="@location.LocationName" />
		<input type="hidden" name="CaseId" value="@location.CaseId"/>

		<table class="table table-bordered table-striped">
			<thead class="table-light">
				<tr>
					<th>Question</th>
					<th>Answer</th>
				</tr>
			</thead>
			<tbody>
				@for (int i = 0; i < location.Questions.Count; i++)
				{
					var question = location.Questions[i];
					var required = question.IsRequired ? "required" : "";
					<tr>
						<td colspan="2">
							<div class="row">
							<div class="col-md-8 col-8">
									@question.QuestionText
									@if (question.IsRequired)
									{
										<span class="required-asterisk" title="Required field">*</span>
									}

									@* Hidden fields to pass extra data back *@
									<input type="hidden" name="Questions[@i].Id" value="@question.Id" />
									<input type="hidden" name="Questions[@i].QuestionText" value="@question.QuestionText" />
									<input type="hidden" name="Questions[@i].QuestionType" value="@question.QuestionType" />
									<input type="hidden" name="Questions[@i].Options" value="@question.Options" />
									<input type="hidden" name="Questions[@i].IsRequired" value="@(question.IsRequired.ToString().ToLower())" />
								</div>
								<div class="col-md-4 col-4">
									@if (question.QuestionType == "text")
									{
										<input type="text" name="Questions[@i].AnswerText" value="@question.AnswerText" class="form-control" />
									}
									else if (question.QuestionType == "radio")
									{
										foreach (var option in question.Options.Split(','))
										{
											var trimmedOption = option.Trim();
											var isChecked = question.AnswerText == trimmedOption ? "checked" : "";
											<div class="form-check">
												@if (question.AnswerText == trimmedOption)
												{
													<input type="radio" name="Questions[@i].AnswerText" value="@trimmedOption" class="form-check-input" checked />
												}
												else
												{
													<input type="radio" name="Questions[@i].AnswerText" value="@trimmedOption" class="form-check-input" />
												}
												<label class="form-check-label">@option.Trim()</label>
											</div>
										}
									}
									else if (question.QuestionType == "checkbox")
									{
										var selectedOptions = question.AnswerText?.Split(',') ?? new string[] { };

										@foreach (var option in question.Options.Split(','))
										{
											var trimmedOption = option.Trim();
											var isChecked = selectedOptions.Contains(trimmedOption) ? "checked" : "";
											<div class="form-check">
												<input type="checkbox" name="Questions[@i].AnswerText" value="@trimmedOption" class="form-check-input" @isChecked />
												<label class="form-check-label">@trimmedOption</label>
											</div>
										}

									}
									else if (question.QuestionType == "dropdown")
									{
										var options = question.Options?.Split(',') ?? new string[] { "Yes", "No" };
										<select name="Questions[@i].AnswerText" class="form-select form-control" @required>
											<option value="">--- SELECT ---</option>
											@foreach (var option in options)
											{
												@if (question.AnswerText == option.Trim())
												{
													<option value="@option" selected>@option</option>
												}
												else
												{
													<option value="@option">@option</option>
												}
											}
										</select>

									}

									else if (question.QuestionType == "date")
									{
										<div class="position-relative">
											<input max="@DateTime.Now.ToString("yyyy-MM-dd")" type="date" name="Questions[@i].AnswerText"
												   value="@question.AnswerText" class="form-control date-input pe-5" @required placeholder="@question.QuestionText" />
											<button type="button" class="btn btn-sm btn-clear-date" title="Clear date">
												&times;
											</button>
										</div>
									}
								</div>
								</div>
						</td>
					</tr>
				}
			</tbody>
		</table>

		<button type="submit" class="btn btn-primary">Submit Answers</button>
	</form>
}

