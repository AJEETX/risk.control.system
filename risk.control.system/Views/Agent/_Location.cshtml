@using risk.control.system.Helpers;
@model ReportTemplate
<input type="hidden" id="latitude" />
<input type="hidden" id="longitude" />
<input type="hidden" name="caseId" value="@Model.CaseId" />
@foreach (var location in Model.LocationTemplate)
{
	<div class="col-12 p-4 mb-5 border rounded shadow-sm bg-light location-container">
		@Html.AntiForgeryToken()

		<h5 class="mb-4 text-primary border-bottom pb-2">
			<i class="fas fa-map-marker-alt me-2"></i> @location.LocationName
		</h5>

		<!-- Agent Table -->
		@{
			var agent = location.AgentIdReport;
		}
		<table class="table table-bordered table-striped mb-4">
			<thead class="table-light">
				<tr>
					<th>Photo</th>
					<th>
						<i class="far fa-user text-primary" title="This Image has agent photo at the location" data-toggle="tooltip"></i>
					</th>
					<th>Photo</th>
					<th>Map</th>
					<th>Address</th>
					<th>Match</th>
					<th>Action</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>
						@if (agent.ValidationExecuted)
						{
							@location.AgentEmail
						}
						else
						{
							@agent.ReportType.GetEnumDisplayName()
						}
					</td>
					<td>
						<i class="fa fa-asterisk asterik-style" title="Required"></i><i class="far fa-user text-primary" title="Single person"></i>
					</td>
					
					<td>
						@if (agent.ValidationExecuted)
						{
							<img id="face-img-@agent.Id"
								 src="data:image/*;base64,@(Convert.ToBase64String(agent?.IdImage))"
								 class="thumbnail profile-image doc-profile-image preview-image"
								 title="Click to view @location.AgentEmail photo" />
						}
						else
						{
							<img src="~/img/no-user.png" class="thumbnail profile-image doc-profile-image" />
						}
						
					</td>
					<td>
						@if (agent.ValidationExecuted)
						{
							<img src="@agent.IdImageLocationUrl"
								 class="thumbnail profile-image doc-profile-image map-image"
								 data-faceid="@agent.Id"
								 data-locationid="@location.Id"
								 data-caseid="@Model.CaseId"
								 data-source="agent"
								 title="Click to view map"/>
						}
						else
						{
							<img src="~/img/no-map.jpeg" class="thumbnail profile-image doc-profile-image" />
						}
					</td>
					<td>
						@if (agent.ValidationExecuted)
						{
							@agent.IdImageLocationAddress
						}
						else
						{
							<img src="~/img/no-map-image.jpeg" class="thumbnail profile-image doc-profile-image" />
						}
					</td>
					<td>
						@if (agent.ValidationExecuted)
						{
							@if (agent.Similarity < 70)
							{
								<i class='fa fa-times i-orangered' aria-hidden='true'></i>
							}
							else
							{
								<i class='fas fa-check-circle i-green'></i>
							}
						}
						else
						{
							<i class='fa fa-times i-grey' aria-hidden='true'></i>
						}

					</td>
					<td>
						<input type="file" class="form-control remarks document-image-input face-upload" data-faceid="@agent.Id" accept="image/*"
							   data-toggle="tooltip" title="Agent Photo" />
						<button type="button" class="btn btn-sm btn-success mt-2 upload-face-btn" 
						data-faceid="@agent.Id" 
						data-isagent="true" 
						data-location-name="@location.LocationName" 
						data-locationid="@location.Id" 
						data-name="@agent.ReportName">
							<i class="fas fa-upload"></i> Upload
						</button>
						<div id="upload-status-@agent.Id" class="text-success small mt-1"></div>
					</td>

				</tr>
			</tbody>
		</table>
		<!-- FaceIds Table -->
		@if (location.FaceIds?.Any(f => f.Selected) == true)
		{
			<table class="table table-bordered table-striped mb-4">
				<thead class="table-light">
					<tr>
						<th>Photo</th>
						<th>
							<i class="fas fa-users text-primary"
							   title="This Image has 2 person" data-toggle="tooltip"></i>
							/
							<i class="far fa-user text-primary" title="This Image has single person" data-toggle="tooltip"></i>
						</th>
						<th>Photo</th>
						<th>Map</th>
						<th>Address</th>
						<th>Match</th>
						<th>Action</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var face in location.FaceIds.Where(f => f.Selected))
					{
						<tr>
							<td>
								@face.ReportName
							</td>
							<td>
								@if (face.Has2Face)
								{
									<i class="fas fa-users text-primary" title="2 persons"></i>
								}
								else
								{
									<i class="far fa-user text-primary" title="Single person"></i>
								}
								<i class="fa fa-asterisk asterik-style" title="Required"></i>
							</td>
							<td>
								@if (face.ValidationExecuted)
								{
									<img id="face-img-@face.Id"
										 src="data:image/*;base64,@(Convert.ToBase64String(face?.IdImage))"
										 class="thumbnail profile-image doc-profile-image preview-image"
										 title="Click to view face photo" />
								}
								else
								{
									<img src="~/img/no-user.png" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (face.ValidationExecuted)
								{
									<img src="@face.IdImageLocationUrl"
								 class="thumbnail profile-image doc-profile-image map-image"
								 data-faceid="@face.Id"
								 data-locationid="@location.Id"
								 data-caseid="@Model.CaseId"
										 data-source="agent"
								 title="Click to view map" />

								}
								else
								{
									<img src="~/img/no-map.jpeg" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (face.ValidationExecuted)
								{
									@face.IdImageLocationAddress
								}
								else
								{
									<img src="~/img/no-map-image.jpeg" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (face.ValidationExecuted)
								{
									@if (face.Similarity < 70)
									{
										<i class='fa fa-times i-orangered' aria-hidden='true'></i>
									}
									else
									{
										<i class='fas fa-check-circle i-green'></i>
									}
								}
								else
								{
									<i class='fa fa-times i-grey' aria-hidden='true'></i>
								}

							</td>
							<td>
								<input type="file" class="form-control form-control-sm face-upload" data-faceid="@face.Id" accept="image/*" />
								<button type="button" class="btn btn-sm btn-success mt-2 upload-face-btn" 
								data-faceid="@face.Id" 
								data-locationid="@location.Id"
										data-location-name="@location.LocationName"
										data-name="@face.ReportName">
									<i class="fas fa-upload"></i> Upload
								</button>
								<div id="upload-status-@face.Id" class="text-success small mt-1"></div>
							</td>

						</tr>
					}

				</tbody>
			</table>
		}

		<!-- DocumentIds Table -->
		@if (location.DocumentIds?.Any(d => d.Selected) == true)
		{
			<table class="table table-bordered table-striped mb-4">
				<thead class="table-light">
					<tr>
						<th>Document</th>
						<th>
							<i class="fas fa-copy text-muted ms-2"
							   title="With Back page" data-toggle="tooltip"></i>
							/
							<i class="far fa-file text-muted ms-2" title="Single page" data-toggle="tooltip"></i>
						</th>
						<th>Image</th>
						<th>Map</th>
						<th>Address</th>
						<th>Valid</th>
						<th>Action</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var doc in location.DocumentIds.Where(d => d.Selected))
					{

						<tr>
							<td>@doc.ReportName</td>
							<td>
								@if (doc.HasBackImage)
								{
									<i class="fas fa-copy text-muted" title="Back page present"></i>
								}
								else
								{
									<i class="far fa-file text-muted" title="Front only"></i>
								}
								<i class="fa fa-asterisk asterik-style" title="Required"></i>
							</td>
							<td>
								@if (doc.ValidationExecuted)
								{
									<img id="doc-img-@doc.Id"
										 src="data:image/*;base64,@(Convert.ToBase64String(doc?.IdImage))"
										 class="thumbnail profile-image doc-profile-image preview-image"
										 title="Click to view document" />
								}
								else
								{
									<img id="doc-img-@doc.Id" src="~/img/no-policy.jpg" class="thumbnail profile-image doc-profile-image" />
								}

							</td>
							<td>
								@if (doc.ValidationExecuted)
								{
									<img id="face-img-@doc.Id"
										 src="@doc.IdImageLocationUrl"
										 class="thumbnail profile-image doc-profile-image map-image"
										 data-faceid="@doc.Id"
										 data-locationid="@location.Id"
										 data-caseid="@Model.CaseId"
										 data-source="document"
										 title="Click to view map"/>
								}
								else
								{
									<img src="~/img/no-map.jpeg" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (doc.ValidationExecuted)
								{
									@doc.IdImageLocationAddress
								}
								else
								{
									<img src="~/img/no-map-image.jpeg" class="thumbnail profile-image doc-profile-image" />
								}
							</td>
							<td>
								@if (doc.ValidationExecuted)
								{
									@if (doc.IdImageValid.HasValue && doc.IdImageValid.Value)
									{
										<i class='fas fa-check-circle i-green'></i>
									}
									else
									{
										<i class='fa fa-times i-orangered' aria-hidden='true'></i>
									}
								}
								else
								{
									<i class='fa fa-times i-grey' aria-hidden='true'></i>
								}

							</td>
							<td>
								<input type="file" class="form-control form-control-sm doc-upload" data-docid="@doc.Id" />
								<button class="btn btn-sm btn-primary mt-1 upload-doc-btn" 
								data-docid="@doc.Id" 
								data-locationid="@location.Id"
										data-location-name="@location.LocationName"
										data-name="@doc.ReportName">
									<i class="fas fa-upload"></i> Upload
								</button>
								<div id="doc-upload-status-@doc.Id" class="text-success small mt-1"></div>
							</td>
						</tr>
					}
				</tbody>
			</table>
		}


		<!-- Questions Table -->
		@if (location.Questions?.Any() == true)
		{
			<form asp-controller="Uploads" asp-action="SubmitLocationAnswers" method="post">
				@Html.AntiForgeryToken()
				<input type="hidden" name="LocationId" value="@location.Id" />
				<input type="hidden" name="LocationName" value="@location.LocationName" />
				<input type="hidden" name="caseId" value="@Model.CaseId" />

				<table class="table table-bordered table-striped">
					<thead class="table-light">
						<tr>
							<th>Question</th>
							<th>Answer</th>
						</tr>
					</thead>
					<tbody>
						@for (int i = 0; i < location.Questions.Count; i++)
						{
							var question = location.Questions[i];
							var required = question.IsRequired ? "required" : "";
							<tr>
								<td>
									@question.QuestionText
									@if (question.IsRequired)
									{
										<span class="required-asterisk" title="Required field" data-toggle="tooltip">*</span>
									}

									@* Hidden fields to pass extra data back *@
									<input type="hidden" name="Questions[@i].Id" value="@question.Id" />
									<input type="hidden" name="Questions[@i].QuestionText" value="@question.QuestionText" />
									<input type="hidden" name="Questions[@i].QuestionType" value="@question.QuestionType" />
									<input type="hidden" name="Questions[@i].Options" value="@question.Options" />
									<input type="hidden" name="Questions[@i].IsRequired" value="@(question.IsRequired.ToString().ToLower())" />
								</td>
								<td>
									@if (question.QuestionType == "text")
									{
										<input type="text" name="Questions[@i].Answer" value="@question.AnswerText" class="form-control" />
									}
									else if (question.QuestionType == "radio")
									{
										foreach (var option in question.Options.Split(','))
										{
											var trimmedOption = option.Trim();
											var isChecked = question.AnswerText == trimmedOption ? "checked" : "";
											<div class="form-check">
												@if (question.AnswerText == trimmedOption)
												{
													<input type="radio" name="Questions[@i].Answer" value="@trimmedOption" class="form-check-input" checked />
												}
												else
												{
													<input type="radio" name="Questions[@i].Answer" value="@trimmedOption" class="form-check-input" />
												}
												<label class="form-check-label">@option.Trim()</label>
											</div>
										}
									}
									else if (question.QuestionType == "checkbox")
									{
										var selectedOptions = question.AnswerText?.Split(',') ?? new string[] { };

										@foreach (var option in question.Options.Split(','))
										{
											var trimmedOption = option.Trim();
											var isChecked = selectedOptions.Contains(trimmedOption) ? "checked" : "";
											<div class="form-check">
												<input type="checkbox" name="Questions[@i].Answer" value="@trimmedOption" class="form-check-input" @isChecked />
												<label class="form-check-label">@trimmedOption</label>
											</div>
										}

									}
									else if (question.QuestionType == "dropdown")
									{
										var options = question.Options?.Split(',') ?? new string[] { "Yes", "No" };
										<select name="Questions[@i].Answer" class="form-select form-control" @required>
											<option value="">--- SELECT ---</option>
											@foreach (var option in options)
											{
												@if (question.AnswerText == option)
												{
													<option value="@option" selected>@option</option>
												}
												else
												{
													<option value="@option">@option</option>
												}
											}
										</select>

									}

									else if (question.QuestionType == "date")
									{
										<div class="position-relative">
											<input max="@DateTime.Now.ToString("yyyy-MM-dd")" type="date" name="Questions[@i].Answer"
												   value="@question.AnswerText" class="form-control date-input pe-5" @required placeholder="@question.QuestionText" />
											<button type="button" class="btn btn-sm btn-clear-date" title="Clear date">
												&times;
											</button>
										</div>
									}
								</td>
							</tr>
						}
					</tbody>
				</table>

				<button type="submit" class="btn btn-primary">Submit Answers</button>
			</form>
		}

	</div>
}
<partial name="_ReportModal" />